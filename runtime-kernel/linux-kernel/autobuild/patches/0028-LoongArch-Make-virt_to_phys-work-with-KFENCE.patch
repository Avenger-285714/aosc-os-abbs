From 15fd5e86e547e4852c77e4eac91fd7ea3ac502ca Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhuacai@loongson.cn>
Date: Wed, 27 Mar 2024 20:27:22 +0800
Subject: [PATCH 28/45] LoongArch: Make virt_to_phys() work with KFENCE

KFENCE changes virt_to_page() to be able to translate tlb mapped virtual
addresses, but forget to change virt_to_phys() as well. This patch fix
it, otherwise some drivers (such as virtio-blk) cannot work with KFENCE.

BTW, define a simple version of virt_to_page() for !CONFIG_KFENCE.

Signed-off-by: Huacai Chen <chenhuacai@loongson.cn>
---
 arch/loongarch/include/asm/io.h   | 8 ++++++++
 arch/loongarch/include/asm/page.h | 8 ++++++++
 2 files changed, 16 insertions(+)

diff --git a/arch/loongarch/include/asm/io.h b/arch/loongarch/include/asm/io.h
index 4a8adcca329b..b47f1b015881 100644
--- a/arch/loongarch/include/asm/io.h
+++ b/arch/loongarch/include/asm/io.h
@@ -19,6 +19,14 @@
  */
 #define page_to_phys(page)	((phys_addr_t)page_to_pfn(page) << PAGE_SHIFT)
 
+#ifdef CONFIG_KFENCE
+#define virt_to_phys(kaddr)								\
+({											\
+	(likely((unsigned long)kaddr < vm_map_base)) ? __pa((unsigned long)kaddr) :	\
+	page_to_phys(tlb_virt_to_page((unsigned long)kaddr)) + offset_in_page((unsigned long)kaddr);\
+})
+#endif
+
 extern void __init __iomem *early_ioremap(u64 phys_addr, unsigned long size);
 extern void __init early_iounmap(void __iomem *addr, unsigned long size);
 
diff --git a/arch/loongarch/include/asm/page.h b/arch/loongarch/include/asm/page.h
index 44027060c54a..0abbc5342abe 100644
--- a/arch/loongarch/include/asm/page.h
+++ b/arch/loongarch/include/asm/page.h
@@ -80,12 +80,20 @@ struct page *tlb_virt_to_page(unsigned long kaddr);
 
 #define virt_to_pfn(kaddr)	PFN_DOWN(PHYSADDR(kaddr))
 
+#ifndef CONFIG_KFENCE
+
+#define virt_to_page(kaddr)	pfn_to_page(virt_to_pfn(kaddr))
+
+#else
+
 #define virt_to_page(kaddr)								\
 ({											\
 	(likely((unsigned long)kaddr < vm_map_base)) ?					\
 	dmw_virt_to_page((unsigned long)kaddr) : tlb_virt_to_page((unsigned long)kaddr);\
 })
 
+#endif
+
 extern int __virt_addr_valid(volatile void *kaddr);
 #define virt_addr_valid(kaddr)	__virt_addr_valid((volatile void *)(kaddr))
 
-- 
2.44.0

