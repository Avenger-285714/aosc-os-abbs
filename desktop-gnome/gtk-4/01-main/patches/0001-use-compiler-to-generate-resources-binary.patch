diff --git a/demos/gtk-demo/gtkdemo_resources.asm b/demos/gtk-demo/gtkdemo_resources.asm
new file mode 100644
index 0000000..57ef9f0
--- /dev/null
+++ b/demos/gtk-demo/gtkdemo_resources.asm
@@ -0,0 +1,2 @@
+.data
+.incbin "demos/gtk-demo/gtkdemo.gresource"
diff --git a/demos/gtk-demo/meson.build b/demos/gtk-demo/meson.build
index 1347baf..2026b18 100644
--- a/demos/gtk-demo/meson.build
+++ b/demos/gtk-demo/meson.build
@@ -192,17 +192,17 @@ if not meson.is_cross_build() and build_machine.cpu_family() != 'arm' and build_
                  '--external-data',
                  '--c-name', '_g_binary_gtkdemo',
                  '@INPUT@'])
+  gtkdemo_resource_immifile = configure_file(
+      input : 'gtkdemo_resources.asm',
+      output : 'gtkdemo_resources.asm',
+      copy : true)
 
   # Create object file containing resource data
   gtkdemo_resources_binary = custom_target('gtkdemo_resources.o',
-      input : gtkdemo_gresource,
+      input : [gtkdemo_gresource, gtkdemo_resource_immifile],
       output : 'gtkdemo_resources.o',
-      command : [ld,
-                 '-z', 'noexecstack',
-                 '-r',
-                 '-b','binary',
-                 '@INPUT@',
-                 '-o','@OUTPUT@'])
+      command : cc.cmd_array() + [ '-c', '-Wa,--noexecstack',
+        '-o', '@OUTPUT@', '-x', 'assembler', '@INPUT1@'])
 
   # Rename symbol to match the one in the C file
   gtkdemo_resources_o = custom_target('gtkdemo_resources2.o',
diff --git a/demos/widget-factory/meson.build b/demos/widget-factory/meson.build
index 550eb09..6df0fd1 100644
--- a/demos/widget-factory/meson.build
+++ b/demos/widget-factory/meson.build
@@ -40,17 +40,18 @@ if not meson.is_cross_build() and build_machine.cpu_family() != 'arm' and build_
                  '--external-data',
                  '--c-name', '_g_binary_widgetfactory',
                  '@INPUT@'])
+  
+  wf_resources_immifile = configure_file(
+      input : 'widgetfactory_resources.asm',
+      output : 'widgetfactory_resources.asm',
+      copy : true)
 
   # Create object file containing resource data
   widgetfactory_resources_binary = custom_target('widgetfactory_resources.o',
-      input : widgetfactory_gresource,
+      input : [widgetfactory_gresource, wf_resources_immifile],
       output : 'widgetfactory_resources.o',
-      command : [ld,
-                 '-z', 'noexecstack',
-                 '-r',
-                 '-b','binary',
-                 '@INPUT@',
-                 '-o','@OUTPUT@'])
+      command : cc.cmd_array() + [ '-c', '-Wa,--noexecstack',
+                '-o', '@OUTPUT@', '-x', 'assembler', '@INPUT1@'])
 
   # Rename symbol to match the one in the C file
   widgetfactory_resources_o = custom_target('widgetfactory_resources2.o',
diff --git a/demos/widget-factory/widgetfactory_resources.asm b/demos/widget-factory/widgetfactory_resources.asm
new file mode 100644
index 0000000..1873554
--- /dev/null
+++ b/demos/widget-factory/widgetfactory_resources.asm
@@ -0,0 +1,2 @@
+.data
+.incbin "demos/widget-factory/widgetfactory.gresource"
diff --git a/gtk/gtkresources.asm b/gtk/gtkresources.asm
new file mode 100644
index 0000000..6115253
--- /dev/null
+++ b/gtk/gtkresources.asm
@@ -0,0 +1,2 @@
+.data
+.incbin "gtk/gtk.gresource"
diff --git a/gtk/meson.build b/gtk/meson.build
index 3a8457a..9a5940e 100644
--- a/gtk/meson.build
+++ b/gtk/meson.build
@@ -925,17 +925,23 @@ if not meson.is_cross_build() and build_machine.cpu_family() != 'arm' and build_
                  '--manual-register',
                  '@INPUT@'])
 
+  # Copy the intermidiate asm file to build directory
+  gtk_resources_immifile = configure_file(
+      input : 'gtkresources.asm',
+      output : 'gtkresources.asm',
+      copy : true)
+
+  # GNOME what's wrong with you
+  # Use the compiler to generate proper binary resource data
   # Create object file containing resource data
+  # Make sure gtk.gresources is generated
   gtk_resources_binary = custom_target('gtkresources_blob.o',
-      input : gtk_gresource,
+      input : [gtk_gresource, gtk_resources_immifile],
       output : 'gtkresources_blob.o',
-      command : [ld,
-                 '-z', 'noexecstack',
-                 '-r',
-                 '-b','binary',
-                 '@INPUT@',
-                 '-o','@OUTPUT@'])
-
+      command : cc.cmd_array() + [ '-c', '-Wa,--noexecstack',
+                  '-o', '@OUTPUT@', '-x', 'assembler',
+                  '@INPUT1@'])
+  
   # Rename symbol to match the one in the C file
   gtk_resources_o = custom_target('gtkresources_blob2.o',
     input : gtk_resources_binary,
