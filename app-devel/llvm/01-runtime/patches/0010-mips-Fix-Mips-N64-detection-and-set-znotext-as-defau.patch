From 1c7ce87dfa925c8d355d85e9a522d957615540be Mon Sep 17 00:00:00 2001
From: Henry Chen <henry.chen@oss.cipunited.com>
Date: Tue, 30 Jan 2024 18:52:54 +0800
Subject: [PATCH 10/27] [mips] Fix Mips N64 detection and set -znotext as
 default

---
 lld/ELF/Driver.cpp                                |  2 +-
 llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp | 12 ++++++------
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/lld/ELF/Driver.cpp b/lld/ELF/Driver.cpp
index c2059c70e15a..8cd1ecb88369 100644
--- a/lld/ELF/Driver.cpp
+++ b/lld/ELF/Driver.cpp
@@ -1380,7 +1380,6 @@ static void readConfigs(opt::InputArgList &args) {
   config->zStartStopGC =
       getZFlag(args, "start-stop-gc", "nostart-stop-gc", true);
   config->zStartStopVisibility = getZStartStopVisibility(args);
-  config->zText = getZFlag(args, "text", "notext", true);
   config->zWxneeded = hasZOption(args, "wxneeded");
   setUnresolvedSymbolPolicy(args);
   config->power10Stubs = args.getLastArgValue(OPT_power10_stubs_eq) != "no";
@@ -1709,6 +1708,7 @@ static void setConfigs(opt::InputArgList &args) {
       args.hasFlag(OPT_toc_optimize, OPT_no_toc_optimize, m == EM_PPC64);
   config->pcRelOptimize =
       args.hasFlag(OPT_pcrel_optimize, OPT_no_pcrel_optimize, m == EM_PPC64);
+  config->zText = getZFlag(args, "text", "notext", m != EM_MIPS);
 }
 
 static bool isFormatBinary(StringRef s) {
diff --git a/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp b/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp
index e8179de43511..a11862def7a6 100644
--- a/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp
+++ b/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp
@@ -208,15 +208,15 @@ void TargetLoweringObjectFileELF::Initialize(MCContext &Ctx,
     // that the eh_frame section can be read-only. DW.ref.personality will be
     // generated for relocation.
     PersonalityEncoding = dwarf::DW_EH_PE_indirect;
-    // FIXME: The N64 ABI probably ought to use DW_EH_PE_sdata8 but we can't
-    //        identify N64 from just a triple.
-    TTypeEncoding = dwarf::DW_EH_PE_indirect | dwarf::DW_EH_PE_pcrel |
-                    dwarf::DW_EH_PE_sdata4;
+    static const auto Sdata = TgtM.getProgramPointerSize() < sizeof(uint64_t)
+                                  ? dwarf::DW_EH_PE_sdata4
+                                  : dwarf::DW_EH_PE_sdata8;
+    TTypeEncoding = dwarf::DW_EH_PE_indirect | dwarf::DW_EH_PE_pcrel | Sdata;
 
     if (isPositionIndependent() &&
         (TgtM.Options.MCOptions.MipsPC64Relocation || TgtM.getTargetTriple().isMIPS32())) {
-      PersonalityEncoding |= dwarf::DW_EH_PE_pcrel | dwarf::DW_EH_PE_sdata4;
-      LSDAEncoding = dwarf::DW_EH_PE_pcrel | dwarf::DW_EH_PE_sdata4;
+      PersonalityEncoding |= dwarf::DW_EH_PE_pcrel | Sdata;
+      LSDAEncoding = dwarf::DW_EH_PE_pcrel | Sdata;
     }
     break;
   case Triple::ppc64:
-- 
2.43.0

